name: 'Build & Push: create-env'
on:
  push:
    branches:
    - main
    paths:
    - images/create-env/*
    - .github/workflows/create-env.yaml
  pull_request:
    paths:
    - images/create-env/*
    - .github/workflows/create-env.yaml

jobs:
  build:
    name: Build & Push
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            base_image: 'quay.io/bioconda/bioconda-utils-build-env-cos7'
            bioconda_utils_version: 'latest'
            unamem: 'x86_64'
          - arch: arm64
            base_image: 'ghcr.io/yikun/bioconda-utils-build-env-cos7-aarch64'
            bioconda_utils_version: 'latest'
            unamem: 'aarch64'
    runs-on: ubuntu-20.04
    env:
      IMAGE_VERSION: '3.0.0'
      IMAGE_NAME: create-env

    steps:
    - uses: actions/checkout@v4

    - name: Prepare
      id: prepare
      run: |
        curl -sSL \
          'https://raw.githubusercontent.com/bioconda/bioconda-common/master/common.sh' \
          | sed -n \
            's/BIOCONDA_UTILS_TAG=v/::set-output name=bioconda_utils_version::/p'

        if [ ${{ matrix.unamem }} == 'x86_64' ]; then
          echo "image_suffix=" >> $GITHUB_OUTPUT
        else
          echo "image_suffix=-${{ matrix.unamem }}" >> $GITHUB_OUTPUT
        fi

    - name: Set up QEMU
      if: matrix.arch != 'amd64'
      uses: docker/setup-qemu-action@v1
      with:
        platforms: ${{ matrix.arch }}

    - name: Build
      id: buildah-build
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_NAME }}${{ steps.prepare.outputs.image_suffix }}
        tags: |
          latest
          ${{ env.IMAGE_VERSION }}
        archs: ${{ matrix.arch }}
        context: ./images/${{ env.IMAGE_NAME }}
        containerfiles: |
          ./images/${{ env.IMAGE_NAME }}/Dockerfile
        build-args: |
          base_image=${{ matrix.base_image }}
          bioconda_utils_version=${{ matrix.bioconda_utils_version }}
          conda_arch=${{ matrix.unamem }}

    - name: Test
      run: |
        image='${{ steps.buildah-build.outputs.image }}'
        ids="$(
          for tag in ${{ steps.buildah-build.outputs.tags }} ; do
            buildah images --quiet --no-trunc "${image}:${tag}"
          done
          )"
        ids="$( printf %s "${ids}" | sort -u )"
        for id in ${ids} ; do
          podman history "${id}"
          buildah bud \
            --build-arg=base="${id}" \
            --file=Dockerfile.test \
            "images/${image}"
        done
        buildah rmi --prune || true

    - name: Check Tags
      run: |
        # FIX upstream: Quay.io does not support immutable images currently.
        #               => Try to use the REST API to check for duplicate tags.
        page=0
        has_additional='true'
        while [ "${has_additional}" = 'true' ] ; do
          page="$(( page + 1 ))"
          respone="$(
            curl -sL -H "Authorization: Bearer ${{ secrets.QUAY_BIOCONDA_TOKEN }}" \
              'https://quay.io/api/v1/repository/bioconda/${{ steps.buildah-build.outputs.image }}/tag?limit=100&page='"${page}"
            )"
          has_additional="$( printf %s "${respone}" | jq -r '.has_additional' )"
          existing_tags="$(
            printf %s "${respone}" \
              | jq -r '.tags[]|.name'
            )" \
            || {
              >&2 printf %s\\n \
                'Could not get list of image tags.' \
                'Does the repository exist on Quay.io?' \
                'Quay.io REST API response was:' \
                "${respone}"
              exit 1
            }
          for tag in ${{ steps.buildah-build.outputs.tags }} ; do
            if [ \! "${tag}" = latest ] ; then
              if printf %s "${existing_tags}" | grep -qxF "${tag}" ; then
                >&2 printf 'Tag %s already exists!\n' "${tag}"
                exit 1
              fi
            fi
          done
        done

    - if: always()
      name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - if: always()
#      if: ${{ github.ref == 'refs/heads/main' }}
      name: Push
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.buildah-build.outputs.image }}
        tags: ${{ steps.buildah-build.outputs.tags }}
        # registry: ${{ secrets.QUAY_BIOCONDA_REPO }}
        registry: ghcr.io/martin-g
        # username: ${{ secrets.QUAY_BIOCONDA_USERNAME }}
        # password: ${{ secrets.QUAY_BIOCONDA_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/main' }}
      name: Test Pushed
      run: |
        image='${{ steps.buildah-build.outputs.image }}'
        ids="$(
          for tag in ${{ steps.buildah-build.outputs.tags }} ; do
            buildah images --quiet --no-trunc "${image}:${tag}"
          done
          )"
        ids="$( printf %s "${ids}" | sort -u )"
        for id in ${ids} ; do
          podman history "${id}"
          buildah bud \
            --build-arg=base="${id}" \
            --file=Dockerfile.test \
            "images/${image}"
        done
        buildah rmi --prune || true
